name: Auto-Generate Changeset

on:
  pull_request:
    branches:
      - main
      - staging
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-changeset:
    name: Auto-Generate Changeset If Missing
    runs-on: ubuntu-latest
    timeout-minutes: 5

    # Skip if:
    # - Draft PR
    # - Has 'skip-changeset' label
    # - Already has a changeset
    if: |
      github.event.pull_request.draft == false &&
      !contains(github.event.pull_request.labels.*.name, 'skip-changeset')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Check for existing changeset
        id: check-changeset
        run: |
          changeset_count=$(find .changeset -name "*.md" ! -name "README.md" 2>/dev/null | wc -l)
          echo "changeset_count=$changeset_count" >> $GITHUB_OUTPUT

          if [ "$changeset_count" -gt 0 ]; then
            echo "has_changeset=true" >> $GITHUB_OUTPUT
          else
            echo "has_changeset=false" >> $GITHUB_OUTPUT
          fi

      - name: Analyze changed files
        id: analyze
        if: steps.check-changeset.outputs.has_changeset == 'false'
        run: |
          # Get changed files
          git fetch origin ${{ github.base_ref }}
          changed_files=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)

          # Check if any important files were changed
          important_files=$(echo "$changed_files" | grep -E '^(web/src|functions/src|web/gatsby-|.*package\.json$)' || true)

          if [ -z "$important_files" ]; then
            echo "has_important_changes=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "has_important_changes=true" >> $GITHUB_OUTPUT

          # Determine which packages changed
          has_web=$(echo "$important_files" | grep -E '^web/' && echo "true" || echo "false")
          has_functions=$(echo "$important_files" | grep -E '^functions/' && echo "true" || echo "false")

          echo "has_web=$has_web" >> $GITHUB_OUTPUT
          echo "has_functions=$has_functions" >> $GITHUB_OUTPUT

          # Auto-detect change type based on files
          if echo "$changed_files" | grep -qE 'package\.json|breaking|BREAKING'; then
            change_type="minor"
          else
            change_type="patch"
          fi

          echo "change_type=$change_type" >> $GITHUB_OUTPUT

      - name: Generate changeset
        id: generate
        if: |
          steps.check-changeset.outputs.has_changeset == 'false' &&
          steps.analyze.outputs.has_important_changes == 'true'
        run: |
          # Get PR info
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="${{ github.event.pull_request.body }}"
          PR_NUMBER="${{ github.event.pull_request.number }}"

          # Determine packages line
          PACKAGES=""
          if [ "${{ steps.analyze.outputs.has_web }}" == "true" ]; then
            PACKAGES="\"josh-wentworth-portfolio\": ${{ steps.analyze.outputs.change_type }}"
          fi
          if [ "${{ steps.analyze.outputs.has_functions }}" == "true" ]; then
            if [ -n "$PACKAGES" ]; then
              PACKAGES="${PACKAGES}\n\"contact-form-function\": ${{ steps.analyze.outputs.change_type }}"
            else
              PACKAGES="\"contact-form-function\": ${{ steps.analyze.outputs.change_type }}"
            fi
          fi

          # Create changeset content
          cat > ".changeset/pr-$PR_NUMBER-auto.md" << EOF
          ---
          $PACKAGES
          ---

          $PR_TITLE

          Auto-generated changeset for PR #$PR_NUMBER
          EOF

          echo "changeset_file=.changeset/pr-$PR_NUMBER-auto.md" >> $GITHUB_OUTPUT

      - name: Commit and push changeset
        if: |
          steps.check-changeset.outputs.has_changeset == 'false' &&
          steps.analyze.outputs.has_important_changes == 'true'
        run: |
          git add .changeset/
          git commit -m "chore: auto-generate changeset for PR #${{ github.event.pull_request.number }}

          Auto-generated by GitHub Actions workflow.

          [skip ci]"
          git push

      - name: Comment on PR
        if: |
          steps.check-changeset.outputs.has_changeset == 'false' &&
          steps.analyze.outputs.has_important_changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const body = `## ðŸ¤– Auto-Generated Changeset

            I've automatically created a changeset for this PR!

            **File**: \`${{ steps.generate.outputs.changeset_file }}\`
            **Type**: \`${{ steps.analyze.outputs.change_type }}\`
            **Packages**: ${
              '${{ steps.analyze.outputs.has_web }}' === 'true' && '${{ steps.analyze.outputs.has_functions }}' === 'true'
                ? 'web + functions'
                : '${{ steps.analyze.outputs.has_web }}' === 'true'
                ? 'web only'
                : 'functions only'
            }

            If you'd like to customize the changeset description, you can:
            1. Edit the file directly
            2. Or delete it and run \`npm run changeset\` manually

            ---

            âœ… Changeset requirement satisfied!`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });

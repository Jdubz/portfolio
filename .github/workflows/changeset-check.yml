name: Changeset Check

on:
  pull_request:
    branches:
      - main
      - staging
    types: [opened, synchronize, reopened, ready_for_review, labeled, unlabeled]

permissions:
  contents: read
  pull-requests: write

jobs:
  changeset-check:
    name: Check for Changeset
    runs-on: ubuntu-latest
    timeout-minutes: 5

    # Skip draft PRs and PRs with 'skip-changeset' label
    if: |
      github.event.pull_request.draft == false &&
      !contains(github.event.pull_request.labels.*.name, 'skip-changeset')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Need full history to compare changes

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Check for changeset files
        id: changeset-check
        run: |
          # Check if .changeset directory exists
          if [ ! -d ".changeset" ]; then
            echo "has_changeset=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Count changeset files (excluding README.md and config.json)
          changeset_count=$(find .changeset -name "*.md" ! -name "README.md" | wc -l)

          if [ "$changeset_count" -gt 0 ]; then
            echo "has_changeset=true" >> $GITHUB_OUTPUT
            echo "changeset_count=$changeset_count" >> $GITHUB_OUTPUT
          else
            echo "has_changeset=false" >> $GITHUB_OUTPUT
          fi

      - name: Get changed files
        id: changed-files
        run: |
          # Get list of changed files in this PR
          git fetch origin ${{ github.base_ref }}
          changed_files=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)

          # Check if any important files were changed
          important_changes=$(echo "$changed_files" | grep -E '^(web/src|functions/src|web/gatsby-|.*package\.json$)' || true)

          if [ -n "$important_changes" ]; then
            echo "has_important_changes=true" >> $GITHUB_OUTPUT

            # Format file list for comment
            echo "file_list<<EOF" >> $GITHUB_OUTPUT
            echo "$important_changes" | head -10 >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT

            file_count=$(echo "$important_changes" | wc -l)
            echo "file_count=$file_count" >> $GITHUB_OUTPUT
          else
            echo "has_important_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Comment on PR - Reminder
        if: |
          steps.changeset-check.outputs.has_changeset == 'false' &&
          steps.changed-files.outputs.has_important_changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fileCount = '${{ steps.changed-files.outputs.file_count }}';
            const fileList = `${{ steps.changed-files.outputs.file_list }}`;

            const body = `## 📝 Changeset Reminder

            Hey there! 👋 This PR modifies **${fileCount} important file(s)** but doesn't include a changeset yet.

            ### Changed files:
            \`\`\`
            ${fileList}${fileCount > 10 ? '\n... and more' : ''}
            \`\`\`

            ### To add a changeset:

            \`\`\`bash
            npm run changeset
            \`\`\`

            This will prompt you to:
            1. Select which packages changed (web, functions, or both)
            2. Choose version bump type (patch, minor, or major)
            3. Write a summary of your changes

            ### Why changesets?

            - 📋 Generates release notes automatically
            - 🏷️ Manages semantic versioning
            - 📚 Keeps CHANGELOG.md up to date
            - 🔗 Links changes across packages

            ### Don't need a changeset?

            If this PR is for:
            - Documentation updates
            - Internal refactoring with no user-facing changes
            - CI/CD configuration

            Add the \`skip-changeset\` label to skip this check.

            ---

            *This is a friendly reminder - not a blocker! Feel free to add a changeset when ready.* 💚`;

            // Check if we already commented
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.data.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Changeset Reminder')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

      - name: Comment on PR - Acknowledged
        if: steps.changeset-check.outputs.has_changeset == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const changesetCount = '${{ steps.changeset-check.outputs.changeset_count }}';

            const body = `## ✅ Changeset Detected

            Great! This PR includes **${changesetCount} changeset(s)**.

            Your changes will be included in the next release. 🚀`;

            // Check if we already commented
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.data.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Changeset')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

      - name: Summary
        run: |
          if [ "${{ steps.changeset-check.outputs.has_changeset }}" == "true" ]; then
            echo "✅ Changeset found!"
            echo "📋 This PR includes ${{ steps.changeset-check.outputs.changeset_count }} changeset(s)"
          elif [ "${{ steps.changed-files.outputs.has_important_changes }}" == "true" ]; then
            echo "💡 Reminder: Consider adding a changeset for these changes"
            echo "📝 Run: npm run changeset"
            echo ""
            echo "⚠️ This is not a blocker - PRs can be merged without changesets"
          else
            echo "✅ No changeset needed - only documentation or config changes"
          fi

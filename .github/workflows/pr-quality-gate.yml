name: PR Quality Gate

on:
  pull_request:
    branches:
      - main
      - staging
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  quality-gate:
    name: Quality Gate (Build & Type Check)
    runs-on: ubuntu-latest
    timeout-minutes: 15

    # Skip draft PRs
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Cache Gatsby build
        uses: actions/cache@v4
        with:
          path: |
            .cache
            public
          key: gatsby-pr-${{ runner.os }}-${{ hashFiles('gatsby-config.ts', 'package-lock.json') }}-${{ github.sha }}
          restore-keys: |
            gatsby-pr-${{ runner.os }}-${{ hashFiles('gatsby-config.ts', 'package-lock.json') }}-
            gatsby-pr-${{ runner.os }}-

      - name: Install dependencies
        run: npm ci --legacy-peer-deps --prefer-offline --no-audit --no-fund

      - name: Type check (TypeScript)
        run: npx tsc --noEmit
        continue-on-error: false

      - name: Build project
        run: npm run build
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
          GATSBY_BUILD_ENVIRONMENT=pr-check

      - name: Summary
        run: |
          echo "‚úÖ Quality gate checks completed successfully!"
          echo "üìã Checks performed:"
          echo "  - TypeScript compilation check"
          echo "  - Gatsby build verification"
          echo "üìù Ready for review and merge!"

  # This job ensures all REQUIRED checks pass before allowing merge
  all-checks:
    name: All Required Checks Passed
    runs-on: ubuntu-latest
    needs: [quality-gate]
    if: always()

    steps:
      - name: Check required jobs status
        run: |
          if [[ "${{ needs.quality-gate.result }}" != "success" ]]; then
            echo "Quality Gate failed!"
            echo "Quality Gate: ${{ needs.quality-gate.result }}"
            exit 1
          fi
          echo "All required checks passed successfully! ‚úÖ"
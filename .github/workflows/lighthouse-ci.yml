name: Lighthouse CI

on:
  pull_request:
    branches:
      - main
      - staging
  push:
    branches:
      - main
      - staging

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  lighthouse:
    name: Lighthouse Performance Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci --legacy-peer-deps --prefer-offline --no-audit --no-fund

      - name: Build site
        run: npm run build
        env:
          NODE_ENV: production
          CI: true

      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.15.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-results
          path: .lighthouseci/
          retention-days: 7

      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Find the manifest file
            const manifestPath = '.lighthouseci/manifest.json';
            if (!fs.existsSync(manifestPath)) {
              console.log('No Lighthouse results found');
              return;
            }

            const manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));
            const results = manifest[0];

            if (!results || !results.summary) {
              console.log('No summary found in results');
              return;
            }

            const summary = results.summary;

            // Format scores as percentages
            const formatScore = (score) => Math.round(score * 100);

            const comment = `## 🔦 Lighthouse Performance Report

            | Category | Score |
            |----------|-------|
            | 🎯 Performance | ${formatScore(summary.performance)}% |
            | ♿ Accessibility | ${formatScore(summary.accessibility)}% |
            | ✅ Best Practices | ${formatScore(summary['best-practices'])}% |
            | 🔍 SEO | ${formatScore(summary.seo)}% |

            ### Core Web Vitals

            - **First Contentful Paint (FCP)**: ${Math.round(summary['first-contentful-paint'])}ms
            - **Largest Contentful Paint (LCP)**: ${Math.round(summary['largest-contentful-paint'])}ms
            - **Total Blocking Time (TBT)**: ${Math.round(summary['total-blocking-time'])}ms
            - **Cumulative Layout Shift (CLS)**: ${summary['cumulative-layout-shift'].toFixed(3)}
            - **Speed Index**: ${Math.round(summary['speed-index'])}ms

            [View full report](${results.url})
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Summary
        if: always()
        run: |
          echo "## 🔦 Lighthouse CI Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Performance analysis has been completed." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check the artifacts or PR comments for detailed results." >> $GITHUB_STEP_SUMMARY

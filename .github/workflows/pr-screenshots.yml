name: PR Screenshots

on:
  pull_request:
    branches:
      - main
      - staging
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  screenshots:
    name: Generate Component Screenshots
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            web/package-lock.json
            functions/package-lock.json

      - name: Install dependencies
        run: npm ci --legacy-peer-deps --prefer-offline --no-audit --no-fund

      - name: Install Playwright browsers
        run: npx playwright install chromium --with-deps

      - name: Generate screenshots
        run: make screenshot

      - name: Optimize screenshots
        run: |
          # Install pngquant for PNG compression
          sudo apt-get update && sudo apt-get install -y pngquant

          # Compress all screenshots aggressively (20-40% quality for inline display)
          for file in screenshots/images/*.png; do
            if [ -f "$file" ]; then
              echo "Compressing $file..."
              pngquant --quality=20-40 --force --ext .png "$file"
            fi
          done

          echo "âœ… Screenshot optimization complete"
          echo "ðŸ“Š Compressed file sizes:"
          ls -lh screenshots/images/*.png

      - name: Upload screenshots as artifact
        uses: actions/upload-artifact@v4
        with:
          name: component-screenshots-${{ github.event.pull_request.number }}
          path: screenshots/images/*.png
          retention-days: 30

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Upload screenshots to Google Cloud Storage
        id: upload
        run: |
          # Extract project ID from service account
          PROJECT_ID=$(echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' | jq -r '.project_id')
          BUCKET="${PROJECT_ID}.appspot.com"

          # Create path for this PR's screenshots
          PR_NUMBER="${{ github.event.pull_request.number }}"
          COMMIT_SHA="${{ github.event.pull_request.head.sha }}"
          GCS_PATH="pr-screenshots/pr-${PR_NUMBER}/${COMMIT_SHA:0:7}"

          echo "Uploading screenshots to gs://${BUCKET}/${GCS_PATH}/"

          # Upload each screenshot and collect public URLs
          > image_urls.env

          for file in screenshots/images/*.png; do
            if [ -f "$file" ]; then
              filename=$(basename "$file")
              echo "Uploading $filename..."

              # Upload to GCS with public-read ACL
              gsutil -m cp "$file" "gs://${BUCKET}/${GCS_PATH}/${filename}"
              gsutil acl ch -u AllUsers:R "gs://${BUCKET}/${GCS_PATH}/${filename}"

              # Generate public URL
              PUBLIC_URL="https://storage.googleapis.com/${BUCKET}/${GCS_PATH}/${filename}"
              echo "âœ“ Uploaded: $PUBLIC_URL"

              # Save to env file
              echo "${filename}=${PUBLIC_URL}" >> image_urls.env
            fi
          done

          echo "âœ… All screenshots uploaded to GCS"

      - name: Create screenshot gallery for PR
        id: gallery
        run: |
          # Load image URLs
          if [ -f image_urls.env ]; then
            source image_urls.env
          fi

          echo "## ðŸ“¸ Component Screenshots" > comment.md
          echo "" >> comment.md
          echo "Screenshots generated at breakpoints: Mobile (480px) and Desktop (1280px)" >> comment.md
          echo "" >> comment.md

          # Build gallery using hosted URLs
          for component in intro projects about contact; do
            mobile_key="${component}-mobile.png"
            desktop_key="${component}-desktop.png"

            mobile_url=$(grep "^$mobile_key=" image_urls.env 2>/dev/null | cut -d= -f2-)
            desktop_url=$(grep "^$desktop_key=" image_urls.env 2>/dev/null | cut -d= -f2-)

            if [ -n "$mobile_url" ] || [ -n "$desktop_url" ]; then
              echo "### ${component^}" >> comment.md
              echo "" >> comment.md
              echo "<details open>" >> comment.md
              echo "<summary>View ${component} screenshots</summary>" >> comment.md
              echo "" >> comment.md
              echo "<table><tr>" >> comment.md

              if [ -n "$mobile_url" ]; then
                echo "<td width=\"50%\">" >> comment.md
                echo "" >> comment.md
                echo "**Mobile (480px)**" >> comment.md
                echo "" >> comment.md
                echo "![${component} mobile]($mobile_url)" >> comment.md
                echo "" >> comment.md
                echo "</td>" >> comment.md
              fi

              if [ -n "$desktop_url" ]; then
                echo "<td width=\"50%\">" >> comment.md
                echo "" >> comment.md
                echo "**Desktop (1280px)**" >> comment.md
                echo "" >> comment.md
                echo "![${component} desktop]($desktop_url)" >> comment.md
                echo "" >> comment.md
                echo "</td>" >> comment.md
              fi

              echo "</tr></table>" >> comment.md
              echo "" >> comment.md
              echo "</details>" >> comment.md
              echo "" >> comment.md
            fi
          done

          echo "---" >> comment.md
          echo "*Generated from commit ${{ github.event.pull_request.head.sha }}*" >> comment.md

      - name: Find existing screenshot comment
        uses: peter-evans/find-comment@v3
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: 'ðŸ“¸ Component Screenshots'

      - name: Create or update PR comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body-path: comment.md
          edit-mode: replace

      - name: Summary
        run: |
          echo "âœ… Screenshots generated successfully!"
          echo "ðŸ“‹ Generated screenshots:"
          ls -lh screenshots/images/*.png || echo "No screenshots found"
          echo ""
          echo "ðŸ”— View screenshots in PR comment"

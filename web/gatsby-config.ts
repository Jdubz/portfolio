import type { GatsbyConfig, PluginRef } from "gatsby"
import * as dotenv from "dotenv"
import * as path from "path"

// Load environment-specific .env file
// Priority: .env.cache > .env.{GATSBY_ACTIVE_ENV}.local > .env.{GATSBY_ACTIVE_ENV} > .env.{NODE_ENV} > .env
const activeEnv = process.env.GATSBY_ACTIVE_ENV ?? process.env.NODE_ENV ?? "development"

// Load base .env first (if exists)
dotenv.config({ path: path.resolve(process.cwd(), ".env") })

// Load .env.cache (generated by prebuild script with GATSBY_CACHE_VERSION)
dotenv.config({ path: path.resolve(process.cwd(), ".env.cache") })

// Then load environment-specific file
const envFile = `.env.${activeEnv}`
const result = dotenv.config({ path: path.resolve(process.cwd(), envFile) })

if (result.error) {
  console.warn(`⚠️  Could not load ${envFile}`)
}

// Finally, load local overrides if they exist (for personal dev settings)
const localEnvFile = `.env.${activeEnv}.local`
const localResult = dotenv.config({ path: path.resolve(process.cwd(), localEnvFile) })
if (!localResult.error) {
  // eslint-disable-next-line no-console
  console.log(`✓ Loaded local overrides from ${localEnvFile}`)
}

const shouldAnalyseBundle = process.env.ANALYSE_BUNDLE

const config: GatsbyConfig = {
  siteMetadata: {
    // Site metadata used for SEO and social media
    // These values are available to query via GraphQL
    siteTitle: `Josh Wentworth`,
    siteTitleAlt: `Josh Wentworth - Software × Hardware × Fabrication`,
    siteHeadline: `Josh Wentworth - Multidisciplinary Engineer`,
    siteUrl: `https://joshwentworth.com`,
    siteDescription: `Multidisciplinary engineer blending software, electronics/lighting, and digital fabrication. End-to-end problem solving.`,
    siteImage: `/banner.jpg`,
    siteLanguage: `en`,
    author: `Josh Wentworth`,
  },
  trailingSlash: `always`,
  plugins: [
    // MDX support for content sections
    {
      resolve: `gatsby-source-filesystem`,
      options: {
        name: `sections`,
        path: `${__dirname}/src/content/sections`,
      },
    },
    {
      resolve: `gatsby-plugin-mdx`,
      options: {
        extensions: [`.mdx`, `.md`],
        gatsbyRemarkPlugins: [],
      },
    },
    // Theme-UI for styling
    `gatsby-plugin-theme-ui`,
    {
      resolve: `gatsby-plugin-manifest`,
      options: {
        name: `Josh Wentworth - Portfolio`,
        short_name: `JW`,
        description: `Multidisciplinary engineer blending software, electronics/lighting, and digital fabrication`,
        start_url: `/`,
        background_color: `#141821`,
        theme_color: `#0EA5E9`,
        display: `standalone`,
        icons: [
          {
            src: `/favicons/primary-192.png`,
            sizes: `192x192`,
            type: `image/png`,
          },
          {
            src: `/favicons/primary-512.png`,
            sizes: `512x512`,
            type: `image/png`,
          },
          {
            src: `/favicons/maskable-primary-192.png`,
            sizes: `192x192`,
            type: `image/png`,
            purpose: `maskable`,
          },
          {
            src: `/favicons/maskable-primary-512.png`,
            sizes: `512x512`,
            type: `image/png`,
            purpose: `maskable`,
          },
        ],
      },
    },
    // You can remove this plugin if you don't need it
    shouldAnalyseBundle && {
      resolve: `gatsby-plugin-webpack-statoscope`,
      options: {
        saveReportTo: `${__dirname}/public/.statoscope/_bundle.html`,
        saveStatsTo: `${__dirname}/public/.statoscope/_stats.json`,
        open: false,
      },
    },
  ].filter(Boolean) as Array<PluginRef>,
}

export default config
